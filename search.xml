<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[vue+vue-i18n搭建国际化网站【兼容Element-UI、动态切换css】]]></title>
    <url>%2F2018%2F12%2F08%2FvueI18n%2F</url>
    <content type="text"><![CDATA[&nbsp;最近因为雾霾很厉害，所以发烧了在家养病，想着难得有空，正好趁机整理一下以前项目中遇到过的问题及需求。今天想来写一下之前为项目搭建的国际化（i18n）功能，由于之前项目主要是使用的Vue+Element-UI，所以本文章中分别有vue-i18n和兼容element-ui的vue-i18n两种写法，大家可以按需参考。 前言本文是基于vue进行实现的国际化功能，我们假设你对vue已经有了一定的了解，并且已经拥有了属于你自己的vue项目环境，这里不做过多阐述，如果对这一步有疑问的话，请参考我的另一篇文章，进行项目搭建。如果你只是急需一个已经搭建好的i18n模版，也可以直接去我的github仓库下载我已经写好的项目模版。 vue-i18n安装vue-i18n1npm install vue-i18n 配置文件如下图创建i18n文件夹，在i18n文件夹里分别创建i18n.js、langs文件夹，在langs文件夹下面创建你的语言文件（cn.js/en.js/ja.js）和index.js文件。语言包分别为中文/英文/日语，大家在项目中选择创建自己需要的语言包即可。 i18n.js1234567891011import Vue from 'vue'import VueI18n from 'vue-i18n'import messages from './langs'Vue.use(VueI18n)//从localStorage中拿到用户的语言选择，如果没有，那默认中文。const i18n = new VueI18n(&#123; locale: localStorage.lang || 'cn', messages,&#125;)export default i18n index.js12345678import en from './en'import cn from './cn'import ja from './ja'export default &#123; en, cn, ja,&#125; cn.js1234567const cn = &#123; message: &#123; 'hello': '你好', &#125;&#125;export default cn en.js1234567const en = &#123; message: &#123; 'hello': 'hello', &#125;&#125;export default en ja.js1234567const ja = &#123; message: &#123; 'hello': 'こんにちは', &#125;&#125;export default ja 🌟 在配置语言包的时候，key值一定要保持统一，因为i18n是通过你的key值来切换语言的，如果key值有误，就不能正确的切换语言包，这一点千万要注意。 main.js123456789import i18n from './i18n/i18n'new Vue(&#123; el: '#app', router, i18n, //加上i18n components: &#123; App &#125;, template: '&lt;App/&gt;'&#125;) 到此我们的i18n已经全部配置结束了，下面我们去页面中进行使用。 配置页面HTML部分1234&lt;p&gt;&#123;&#123;$t(‘message.hello’)&#125;&#125;&lt;/p&gt;//此时应该是中文&lt;button @click="switchLang('en')"&gt;英语&lt;/button&gt;&lt;button @click="switchLang('cn')"&gt;中文&lt;/button&gt;&lt;button @click="switchLang('ja')"&gt;日语&lt;/button&gt; Js部分1234567methods:&#123; switchLang(lang) &#123; this.$i18n.locale = lang //把语言保存在localStorage中 localStorage.setItem('lang',lang); &#125; &#125;, 到此，运行npm run dev就可以看到可以进行语言切换的项目了。 根据语言切换css到此，我们已经实现了基本的国际化功能。但是，我们在切换语言的时候不得不面临的一个问题就是因为语言的不同，即使是同一句话，文字样式的长度也会不同。所以这时候特别容易产生一些页面样式上的结构错位，为此我们就需要根据不同语言来切换项目的css。我这边提供的思路是在最上层html的div上添加一个可以动态切换class的变量，以改变项目的父级的class名称，实现切换语言的同时切换css样式。 HTML部分1234&lt;template&gt; &lt;div :class="langCss"&gt; &lt;/div&gt;&lt;/template&gt; Js部分在data中定义保存class的变量123456data () &#123; return &#123; langCss:window.localStorage.getItem('lang')||'cn', //先去取localStorage里保存的语言，如果没有，那么就默认中文 //这么做的意义是为了用户在刷新页面的时候样式不丢失。 &#125; 紧接着在我们的switchlLang函数后添加新的一行，以便在切换语言的同时切换class。12345switchLang(lang) &#123; this.$i18n.locale = lang localStorage.setItem('lang',lang); this.langCss=lang;//新添加的，以便切换父级class &#125; Css部分在style标签中中设置你想要的样式，我这边以改变文字颜色为例。123456789.en button &#123; color: steelblue;&#125;.cn button &#123; color: #666;&#125;.ja button &#123; color: seagreen;&#125; 到此vue-i18n的内容就全部结束了，由于现在很多人在使用vue的同时会搭配Element-UI使用，所以我们在现在的基础上优化一下我们的项目 以便可以兼容Element-UI。 兼容Element-UI的i18n参考网址Element组件文档Element官网-i18n 安装Element相关依赖npm install element-ui -s 修改配置main.js1234567891011import ElementUI from 'element-ui'import ‘element-ui/lib/theme-chalk/index.css';Vue.use(ElementUI);new Vue(&#123; store:store, i18n, ElementUI,//添加element-ui el: '#app', components: &#123; App &#125;, template: '&lt;App/&gt;',&#125;) i18n.js1234567891011121314import Vue from 'vue';import locale from 'element-ui/lib/locale';import VueI18n from 'vue-i18n';import messages from './langs';Vue.use(VueI18n);//从localStorage中拿到用户的语言选择，如果没有，那默认中文。const i18n = new VueI18n(&#123; locale: localStorage.lang || 'cn', messages,&#125;)locale.i18n((key, value) =&gt; i18n.t(key, value)) //为了实现element插件的多语言切换export default i18n 修改语言包123456789101112131415161718192021222324252627282930313233343536// en.jsimport enLocale from 'element-ui/lib/locale/lang/en'const en = &#123; message: &#123; 'hello': 'hello', &#125;, ...enLocale&#125;export default en;// **********分割线**********// cn.jsimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'const cn = &#123; message: &#123; hello: '你好，世界', &#125;, ...zhLocale&#125;export default cn;// **********分割线**********// ja.jsimport jaLocale from 'element-ui/lib/locale/lang/ja'const ja = &#123; message: &#123; hello: 'こんにちは、世界', &#125;, ...jaLocale&#125;export default ja; 如果console里有如⬇️警告，证明的你语言包没有配置正确，返回上一步修改语言包查看。 配置页面引用组件至此，我们就可以引入一个Element-UI的组件进行开发了，这里以dialog组件为例演示一下基于Element-UI的文字的国际化方案。当然，你也可以去Element组件文档去引用一些别的组件，这全看你自己的项目需要。 我引用的是第一个dialog组件【基本用法】，引用成功后，页面如下图，这里不对组件引用做过多阐述。此时切换语言后，我们发现暴露在外层我们可修改的语言文字并不会有变化，但是你点击右上角的关闭符号后，会发现里面内置的语言已经改变了。 Js调用下面需要我们来手动配置一下未切换文字的语言包，配置方法同上文的配置页面，这里我顺便说一下，在js里调用国际化直接用this.$t(‘message.xxx’)即可，如下。1234567handleClose(done) &#123; this.$confirm(this.$t('message.confirm'))//js内部切换 .then(_ =&gt; &#123; done(); &#125;) .catch(_ =&gt; &#123;&#125;); &#125; github地址到此，国际化内容全部结束，我把所有代码都放到了我的github仓库上，里面提供了vue-i18n以及兼容Element-UI的两种国际化版本。假如上文中还有哪里不明白的，可以直接下载下来参考。如果有任何疑问或补充，欢迎在评论区给我留言讨论。感谢观看鞠躬 ～]]></content>
      <tags>
        <tag>categories</tag>
        <tag>vue</tag>
        <tag>i18n</tag>
        <tag>element-ui</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用vue-cli从0搭建Vue开发环境]]></title>
    <url>%2F2018%2F12%2F08%2FBuildProjectsVue%2F</url>
    <content type="text"><![CDATA[&nbsp;在程序开发中，有三种方式可以创建vue项目，分别是本地引用、使用CDN引入vue.js、使用vue-cli搭建项目。本文主要介绍使用vue-cli搭建项目。 准备工作安装node请确保你的电脑上安装了node.js，以便于用npm包管理安装环境。如果还没有安装，请去node官网下载安装。 如果安装完成,打开你的终端（Windows-&gt;运行-&gt;cmd、macOS-&gt;command+space-&gt;输入“终端”），使用1node -v 检查你的node版本，出现版本号为已安装，如下图。 全局安装vue-cli1npm install -g vue-cli 如果报错证明你没有安装的权限，执行1sudo npm install -g vue-cli 然后输入你的管理员密码，安装成功。 搭建项目1vue init webpack project-name（你的项目名） 配置说明123456789Project name 项目名称Project description 项目描述Author 作者Vue build 打包方式（可直接回车）Install vue-router? 是否需要安装router，选y（一般项目中肯定会用到）。Use ESLint to lint your code? 是否需要js语法检测（可直接回车）Set up unit tests 是否安装单元测试工具（可直接回车）Setup e2e tests with Nightwatch? 是否需要端到端测试工具（可直接回车）Should we run `npm install` for you after the project has been created? 是否在项目执行完成后为您运行npm install（安装依赖，选y，当然你也可以后续自己手动安装依赖⬇️） 手动安装依赖12cd 你的vue项目npm run install 运行项目1npm run dev 出现️⬇️表示已运行成功，可以通过http://localhost:8080查看你的项目了。12DONE Compiled successfully in 2511ms 01:20:53I Your application is running here: http://localhost:8080 示例效果]]></content>
      <tags>
        <tag>categories</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客测试]]></title>
    <url>%2F2018%2F11%2F07%2FMy-New-Post.1%2F</url>
    <content type="text"><![CDATA[请输入密码阅读本博客。 Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>categories</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建记录]]></title>
    <url>%2F2018%2F11%2F07%2FMy-New-Post%2F</url>
    <content type="text"><![CDATA[请输入密码阅读本博客。 Incorrect Password! No content to display! U2FsdGVkX1+dcelhQBjd1U9D9jSM9dUmtAVHPtrf+0RtrzQszA9nn8c2nAlZ24dUjJ7or66jm4UoZUShivphqyfumCxjBq6sqhmqkLR2K6iowoE2XSr+NgbCaimDU3Fgu6e36KY/CNG8A8EhVLXcN0T57WOpzGvfUAY/Snyx56eWa6LMB1FPtSt8TK2wZ4CoWbUlVDi8BfolshJbdFiTABsqUyMSjWhOwZ46xkwd/dvAd8lg0ZeGVwYu55OMcuUfqMpnRmI2adXDLkQC1IxpL1DGuHMVZ7FGDpfyT19W6hhozhkINMHKd/TiIjjEa4r/]]></content>
      <tags>
        <tag>categories</tag>
      </tags>
  </entry>
</search>
