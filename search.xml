<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[用网易云生成你自己的音乐外链、提取lrc歌词文件、专辑图片。]]></title>
    <url>%2F2018%2F12%2F12%2FmusicLinks%2F</url>
    <content type="text"><![CDATA[&nbsp;在使用各种HTML5音乐播放器的时候，我们通常需要借助一些音乐网站寻找音乐外链，或者是自己用云服务器生成音乐外链，但是音乐外链网站的歌曲数量实在有限，自己生成又浪费时间成本。前一阵子我在搭建博客的时候，使用的是aplayer播放器，顺便自己研究了下怎么用网易云生成音乐外链，非常实用且便捷快速。本篇文章就来总结一下如何使用网易云音乐网站生成你自己的音乐外链、提取专辑图片以及lrc歌词文件。有关于aplayer的使用，我在之后会单独写一篇文章来讲。我在写这篇文章的时候，避免使用了一些专有词汇，无论你会不会使用开发者工具，都可以轻便的上手，当然开发大佬请无视。 提取音乐外链首先，打开网易云音乐的官网，搜索你想要的音乐。 踩坑记录在说正确提取外链方式之前，我先来介绍一下我当时踩的坑，真是一把血泪，如果对这部分没兴趣的朋友可以直接跳到生成外链部分。当时我获取音乐外链的方式是在音乐界面点击左侧的“生成外链播放器”，如下图所示。然后在点开的页面里单击鼠标右键打开检查，然后在最上面一栏寻找Network，找到它下面的Media（如果是空的则重新刷新页面），右键点击下面的Copy，选择Copy link address，这样我就得到了这首歌的音乐外链，不过，在后续使用过程中我发现，这样获取的音乐外链会在一段时间后失效，导致我网页的歌时好时坏，最初我还怀疑自己复制错了值，在我重复测试几次之后，证明这样获取的外链确实会不定期刷新，这种方式虽然快捷，但是并不可靠。当时使用的方法如下↓。不过好在，我之后找到了更简易的办法，就是直接复制网站的网址。 生成外链首先，我们先来复制一下歌曲的网址。然后，重点来了！ 音乐网址：https://music.163.com/#/song?id=557583012 修改后的网址：https://music.163.com/song/media/outer/url?id=557583012.mp3 修改后的网址也就是你所需要的音乐外链，过程就是删除前面的#号，在song后面加上/media/outer/url，最后在结尾处加上.mp3就大功告成啦，没错，就是这么简单，你就拥有了不需要任何云服务器的音乐外链。顺便在这里强推一下断眉的这首Patient，实在是太好听了！PS:这样做可以把网易云不允许你生成音乐外链的版权音乐的音乐外链生成出来，不过我并不推荐你这么做，因为我觉得版权意识还是需要靠大家一起普及开来，所以希望大家在做音乐外链的时候尽量选用那些可以生成外链的音乐。例如上面这首Patient就是一首版权音乐，我在这里只是演示一下生产外链的方法，虽然我很想把这首歌放到博客里给你们听，但是为了版权，还是建议大家自己去网易云音乐听吧 ~ 提取lrc歌词文件首先，还是在网易云音乐的官网搜索你想要的音乐，然后点开Network，此时注意下面一行的选项必须在All上，如果刚刚选择了Media要记得切换回来，然后在搜索框输入lyric（如果没有展示F5刷新页面），把显示出的那个文件右键copy→copy response，如下图。下一步从最上方的Network切换到Console。 然后输入a=在此处粘贴你刚刚复制的内容，并回车，展示如下图。 紧接着输入a.lrc.lyric，回车，下面就是你要提取的lrc歌词文件啦。 如果输入a.tlyric.lyric，那么就是歌词的翻译版本。 提取专辑图片还是点开Network，选取下面一行的img，Copy➡️Copy link address获取图片外链，或者你也可以双击图片，使浏览器在新的网页中展示这张图片，此时我们就可以右键保存它，位置如下↓。 到此，你已经拥有了lrc歌词文件、专辑封面、以及最重要的音乐外链，你可以随意去生成你喜欢的歌单了，如果对以上的内容有任何疑问或补充，欢迎在评论区留言给我。感谢观看。鞠躬 ~]]></content>
      <tags>
        <tag>categories</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue+vue-i18n搭建国际化网站【兼容Element-UI、动态切换css】]]></title>
    <url>%2F2018%2F12%2F08%2FvueI18n%2F</url>
    <content type="text"><![CDATA[&nbsp;最近因为雾霾很厉害，所以发烧了在家养病，想着难得有空，正好趁机整理一下以前在项目中遇到过的问题及需求。今天想来写一下之前为项目搭建的国际化（i18n）功能，由于之前项目主要是使用的Vue+Element-UI，所以本文章中分别有vue-i18n和兼容element-ui的vue-i18n两种写法，大家可以按需参考。 前言本文是基于vue进行实现的国际化功能，我假设你对vue已经有了一定的了解，并且已经拥有了属于你自己的vue项目环境，这里不做过多阐述，如果对这一步有疑问的话，请参考我的另一篇文章，进行项目搭建。如果你只是急需一个已经搭建好的i18n模版，也可以直接去我的github仓库下载我已经写好的项目模版。 vue-i18n安装vue-i18n1npm install vue-i18n 配置文件如下图创建i18n文件夹，在i18n文件夹里分别创建i18n.js、langs文件夹，在langs文件夹下面创建你的语言文件（cn.js/en.js/ja.js）和index.js文件。语言包分别为中文/英文/日语，大家在项目中选择创建自己需要的语言包即可。 i18n.js1234567891011import Vue from 'vue'import VueI18n from 'vue-i18n'import messages from './langs'Vue.use(VueI18n)//从localStorage中拿到用户的语言选择，如果没有，那默认中文。const i18n = new VueI18n(&#123; locale: localStorage.lang || 'cn', messages,&#125;)export default i18n index.js12345678import en from './en'import cn from './cn'import ja from './ja'export default &#123; en, cn, ja,&#125; cn.js1234567const cn = &#123; message: &#123; 'hello': '你好', &#125;&#125;export default cn en.js1234567const en = &#123; message: &#123; 'hello': 'hello', &#125;&#125;export default en ja.js1234567const ja = &#123; message: &#123; 'hello': 'こんにちは', &#125;&#125;export default ja 🌟 在配置语言包的时候，key值一定要保持统一，因为i18n是通过你的key值来切换语言的，如果key值有误，就不能正确的切换语言包，这一点千万要注意。 main.js123456789import i18n from './i18n/i18n'new Vue(&#123; el: '#app', router, i18n, //加上i18n components: &#123; App &#125;, template: '&lt;App/&gt;'&#125;) 到此我们的i18n已经全部配置结束了，下面我们去页面中进行使用。 配置页面HTML部分1234&lt;p&gt;&#123;&#123;$t(‘message.hello’)&#125;&#125;&lt;/p&gt;//此时应该是中文&lt;button @click="switchLang('en')"&gt;英语&lt;/button&gt;&lt;button @click="switchLang('cn')"&gt;中文&lt;/button&gt;&lt;button @click="switchLang('ja')"&gt;日语&lt;/button&gt; Js部分1234567methods:&#123; switchLang(lang) &#123; this.$i18n.locale = lang //把语言保存在localStorage中 localStorage.setItem('lang',lang); &#125; &#125;, 到此，运行npm run dev就可以看到可以进行语言切换的项目了。 根据语言切换css到此，我们已经实现了基本的国际化功能。但是，我们在切换语言的时候不得不面临的一个问题就是因为语言的不同，即使是同一句话，文字样式的长度也会不同。所以这时候特别容易产生一些页面样式上的结构错位，为此我们就需要根据不同语言来切换项目的css。我这边提供的思路是在最上层html的div上添加一个可以动态切换class的变量，以改变项目的父级的class名称，实现切换语言的同时切换css样式。 HTML部分1234&lt;template&gt; &lt;div :class="langCss"&gt; &lt;/div&gt;&lt;/template&gt; Js部分在data中定义保存class的变量123456data () &#123; return &#123; langCss:window.localStorage.getItem('lang')||'cn', //先去取localStorage里保存的语言，如果没有，那么就默认中文 //这么做的意义是为了用户在刷新页面的时候样式不丢失。 &#125; 紧接着在我们的switchlLang函数后添加新的一行，以便在切换语言的同时切换class。12345switchLang(lang) &#123; this.$i18n.locale = lang localStorage.setItem('lang',lang); this.langCss=lang;//新添加的，以便切换父级class &#125; Css部分在style标签中中设置你想要的样式，我这边以改变文字颜色为例。123456789.en button &#123; color: steelblue;&#125;.cn button &#123; color: #666;&#125;.ja button &#123; color: seagreen;&#125; 到此vue-i18n的内容就全部结束了，由于现在很多人在使用vue的同时会搭配Element-UI使用，所以我们在现在的基础上优化一下我们的项目，以便可以兼容Element-UI。 兼容Element-UI的i18n参考网址Element组件文档Element官网-i18n 安装Element相关依赖npm i element-ui -s 修改配置main.js123456789101112//引入element-uiimport ElementUI from 'element-ui';import 'element-ui/lib/theme-chalk/index.css';Vue.use(ElementUI);new Vue(&#123; store:store, i18n, ElementUI,//添加element-ui el: '#app', components: &#123; App &#125;, template: '&lt;App/&gt;',&#125;) i18n.js1234567891011121314import Vue from 'vue';import locale from 'element-ui/lib/locale';import VueI18n from 'vue-i18n';import messages from './langs';Vue.use(VueI18n);//从localStorage中拿到用户的语言选择，如果没有，那默认中文。const i18n = new VueI18n(&#123; locale: localStorage.lang || 'cn', messages,&#125;)locale.i18n((key, value) =&gt; i18n.t(key, value)) //为了实现element插件的多语言切换export default i18n 修改语言包123456789101112131415161718192021222324252627282930313233343536// en.jsimport enLocale from 'element-ui/lib/locale/lang/en'const en = &#123; message: &#123; 'hello': 'hello', &#125;, ...enLocale&#125;export default en;// **********分割线**********// cn.jsimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'const cn = &#123; message: &#123; hello: '你好，世界', &#125;, ...zhLocale&#125;export default cn;// **********分割线**********// ja.jsimport jaLocale from 'element-ui/lib/locale/lang/ja'const ja = &#123; message: &#123; hello: 'こんにちは、世界', &#125;, ...jaLocale&#125;export default ja; 如果console里有如⬇️警告，证明的你语言包没有配置正确，返回上一步修改语言包查看。 配置页面引用组件至此，我们就可以引入一个Element-UI的组件进行开发了，这里以dialog组件为例演示一下基于Element-UI的文字国际化方案。当然，你也可以去Element组件文档去引用一些别的组件，这全看你自己的项目需要。 我引用的是第一个dialog组件【基本用法】，引用成功后，页面如下图，这里不对组件引用做过多阐述。此时切换语言后，我们发现暴露在外层我们可修改的语言文字并不会有变化，但是你点击右上角的关闭符号后，会发现里面内置的语言已经改变了。 Js调用下面需要我们来手动配置一下未切换文字的语言包，配置方法同上文的配置页面，这里我顺便说一下，在js里调用国际化直接用this.$t(‘message.xxx’)即可，如下。1234567handleClose(done) &#123; this.$confirm(this.$t('message.confirm'))//js内部切换 .then(_ =&gt; &#123; done(); &#125;) .catch(_ =&gt; &#123;&#125;); &#125; github地址到此，国际化内容全部结束，我把所有代码都放到了我的github仓库上，里面提供了vue-i18n以及兼容Element-UI的两种国际化版本。假如上文中还有哪里不明白的，可以直接下载下来参考。如果有任何疑问或补充，欢迎在评论区给我留言讨论。感谢观看鞠躬 ～]]></content>
      <tags>
        <tag>categories</tag>
        <tag>vue</tag>
        <tag>i18n</tag>
        <tag>element-ui</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用vue-cli从0搭建Vue开发环境]]></title>
    <url>%2F2018%2F12%2F08%2FBuildProjectsVue%2F</url>
    <content type="text"><![CDATA[&nbsp;在程序开发中，有三种方式可以创建vue项目，分别是本地引用、使用CDN引入vue.js、使用vue-cli搭建项目。本文主要介绍使用vue-cli搭建项目。 准备工作安装node请确保你的电脑上安装了node.js，以便于用npm包管理安装环境。如果还没有安装，请去node官网下载安装。 如果安装完成,打开你的终端（Windows-&gt;运行-&gt;cmd、macOS-&gt;command+space-&gt;输入“终端”），使用1node -v 检查你的node版本，出现版本号为已安装，如下图。 全局安装vue-cli1npm install -g vue-cli 如果报错证明你没有安装的权限，执行1sudo npm install -g vue-cli 然后输入你的管理员密码，安装成功。 搭建项目1vue init webpack project-name（你的项目名） 配置说明123456789Project name 项目名称Project description 项目描述Author 作者Vue build 打包方式（可直接回车）Install vue-router? 是否需要安装router，选y（一般项目中肯定会用到）。Use ESLint to lint your code? 是否需要js语法检测（可直接回车）Set up unit tests 是否安装单元测试工具（可直接回车）Setup e2e tests with Nightwatch? 是否需要端到端测试工具（可直接回车）Should we run `npm install` for you after the project has been created? 是否在项目执行完成后为您运行npm install（安装依赖，选y，当然你也可以后续自己手动安装依赖⬇️） 手动安装依赖12cd 你的vue项目npm run install 运行项目1npm run dev 出现️⬇️表示已运行成功，可以通过http://localhost:8080查看你的项目了。12DONE Compiled successfully in 2511ms 01:20:53I Your application is running here: http://localhost:8080 示例效果]]></content>
      <tags>
        <tag>categories</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客测试]]></title>
    <url>%2F2018%2F11%2F07%2FMy-New-Post.1%2F</url>
    <content type="text"><![CDATA[请输入密码阅读本博客。 Incorrect Password! No content to display! ]]></content>
      <tags>
        <tag>categories</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客搭建记录]]></title>
    <url>%2F2018%2F11%2F07%2FMy-New-Post%2F</url>
    <content type="text"><![CDATA[请输入密码阅读本博客。 Incorrect Password! No content to display! U2FsdGVkX19EOs7PNaCi7/2b/fsjUJYLtLAYjjTuz7x8zfPtGfUpH23AY1+aKyy2zR/hnRjklEhdFFw1AzVvphXMGE6EXv+/AyF5Ri4jLtxo6oOftW67Rigxz4o36eEaSA1GHuPGDLotrCA8btOnIDwWjqqWRDBBJQoYrJvDL20xcGmsMbigPHLiz7RkubezgDvc1dGF74hfvI6WOSa+VyhDpb0A2Fh/qEWx/Cy3IAX/u+8HIXT5vnlk/6+qrFvIln5B5CmzQHb2sMN9CAfXspjNI0XUyN/ltSbBq2yrAxnziOgxLF3yH4mbcM7d5Wxg]]></content>
      <tags>
        <tag>categories</tag>
      </tags>
  </entry>
</search>
